    { values: 29..32, points: 'TR.1(29) + Gi.1(36), Vb.40(30) + F.4(35),
      TR.2-bad(31) + Gi.2-bad(34), Vb.41(32) + F.3(33)' }, #mirror 33..36
    { values: 45..48, points: 'Gi.3(45) + MC.5(20), P.11(46) + VB.43(19),
      Gi.4(47) + MC.3(18), F.8(48) + VB.44(17)' },
    { values: 17..20, points: 'VB.44(17) + F.8(48), MC.3(18) + Gi.4(47),
      VB.43(19) + P.11(46), MC.5(20) + Gi.3(45)' }, # mirror 45..48
    { values: 25..28, points: 'Gi.5(25) + TR.5(40), P.9(26) + MC.7(39),
      Gi.11(27) + TR.10(38), P.10(28) + MC.8(37)' },
    { values: 37..40, points: 'MC.8(37) + P.10(28), TR.10(38) + Gi.11(27),
      MC.7(39) + P.9(26), TR.5(40) + Gi.5(25)' }, # mirror 25..28
    { values: 57..60, points: 'Ig.3(57) + C.4(8), V.40(58) + Rp.2(7),
      Ig.4(59) + C.3(6), V.60(60) + Rp.1(5) ' },
    { values: 5..8, points: 'Rp.1(5) + V.60(60), C.3(6) + Ig.4(59),
      Rp.2(7) + V.40(58), C.4(8) + Ig.3(57)' }, # mirror 57..60
    { values: 13..16, points: 'Ig.5(13) + E.41(52), Rp.2(14) + C.7(51),
      Ig.8(15) + E.36(50), R.1(16) + C.8(49)' },
    { values: 49..52, points: 'C.8(49) + R.1(16), E.36(50) + Ig.8(15),
      C.7(51) + Rp.2(14), E.41(52) + Ig.5(13) ' }, # mirror 13..16
    { values: 1..4, points: 'R.3(1) + Rp.9(64), V.66(2) + E.42(63),
      R.7(3) + C.9(62), V.67(4) + E.43(61)' },
    { values: 61..64, points: 'E.43(61) + V.67(4), C.9(62) + R.7(3),
      E.42(63) + V.66(2), Rp.9(64) + R.3(1) ' }, # mirror 1..4
    { values: 53..56, points: 'R.10(53) + E.45(12), V.64-bad(54) + Rp.5-bad(11),
      MC.9(55) + E.44(10), V.65(56) + Rp.3(9)' },
    { values: 9..12, points: 'Rp.3(9) + V.65(56), E.44(10) + MC.9(55),
     Rp.5-bad(11) + V.64-bad(54), E.45(12) + R.10(53)' }, # mirror 53..56
  ]
  end
end
matrix = points_matrix_lo_shu(meridian_lo_shu)
matrix
def lo_shu_points(matrix, first_point_lo_shu)
  matrix.find do |point|
    point[:values].include?(first_point_lo_shu)
  end
end
lo_shu_points(matrix, first_point_lo_shu)
p 'NOW ARE OPEN: ' + lo_shu_points(matrix, first_point_lo_shu)[:points].to_s
first_point_lo_shu
reload!
City.all
a = City.new
a
a.name = "Moscow"
a.lng = 37.64
a.save
a.save
a.name = "Moscow"
a.lng = 37.64
a.save
reload
reload!
a = City.new
a.name = "Moscow"
a
a.lng = 37.64
a.save
a
reload!
a = City.new
a.name = "Moscow"
a.lng = 37.64
a.save
a.save.errors
a.save.errors?
a
exit
City.all
a = City.new
a
exit
a = City.new
a.name = "Magnitogorsk"
a
a.lng = 59.6
a.save
a
exit
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save
a.errors
reload!
a.sasve
a.save
a.errors
current_doctor
exit
Patient.last
a = Patient.last
exit
Doctor.last
exit
Doctor.last
a = City.new
a.doctor
Patient.last
a = Patient.last.city
a
a.name = 'Magnitogorsk'
reload
exit
Patient.last
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save
a.errors
exit
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save
a.errors
exit
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save!
exit
a = City.new
a.name = 'Magnitogorsk'
a
a.lng = 59.6
a
a.save
a.errors
exit
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save
a.errors
exit
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save
a.errors
exit
a = City.new
a.name = 'Magnitogorsk'
a.lng = 59.6
a.save
City.last
a = City.new
a.name = 'Moskow'
a.lng = 37.64
a.save
a = City.new
a.name = 'Novosibirsk'
a.lng = 82.9
a.save
City.all.name
City.all.names
City.all.each{ |s| p s.name}
exit
a = Patient[11]
a = Patient.id[11]
a = Patient.id = [11]
a = Patient.(id[11])
a = Patient.(id=11)
Patient.last
Patient.first
a = Patient.first
a.id
Patient.id(11)
Patients.id(11)
Patient.id[11]
Patient.id=11
a = Patient.where(id=11)
a = Patient.where(id[11])
exit
Patient.last
Patient.first
exit
Patient.first.city
Patient.first.city
Сityюдфые
Сity.last
Сities.last
City.all
City.first
City.first.id
exit
Patient.first.city
Patient.last.city
exit
Patient.last
Patient.first.city
Patient.first.city = "Smolensk"
Patient.first.city = "Moscow"
Patient.first.city = City.first
City.first
учше
exit
Patient.first
Patient.first.city = City.first
exit
