(paid_until.to_i - DateTime.now.to_i)/1.minute
paid_until = DateTime.now+1.day[A
(paid_until.to_i - DateTime.now.to_i)/1.minute
(paid_until - DateTime.now)
paid_until - DateTime.now
28783371887/2880000000
paid_until.in_sec - DateTime.now.in_sec
 DateTime.now.sec
 DateTime.now.seconds
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second

DateTime.now
paid_until
(paid_until.to_i - DateTime.now.to_i)/1.second
paid_until =DateTime.now+40.sec
paid_until =DateTime.now+40.second
paid_until
(paid_until.to_i - DateTime.now.to_i)/1.second
Patient.last
Doctor.last
exit
Doctor.find_by(email: 'nick4vk@yandex.ru')
a = Doctor.find_by(email: 'nick4vk@yandex.ru')
a
a.update paid_until: 'DateTime.now+1.month'
a.paid_until
a
a.update paid_until: 'DateTime.now+30.days'
a
DateTime.now+30.days
a.update (paid_until: ('DateTime.now+1.month)')
a
a
a.update (paid_until: ('DateTime.now+1.month'))
a
a.update paid_until: ('DateTime.now+1.month')
a
a.update name: 'Sun'
a
a.update paid_until: '16.01.2021'
a
reload!
(paid_until.to_i - DateTime.now.to_i)/1.second
(a.paid_until.to_i - DateTime.now.to_i)/1.second
me = Doctor.find_by(email: 'consilium1@yandex.ru')
me
me.has_paid
me.update paid_until: 16.01.2021
me.update paid_until: '16.01.2021'
a.update moderator: true
a
a.update moderator: false
me.update paid_until: '1.01.2021'
me.update paid_until: '18.12.2020'
me.update paid_until: '17.12.2020'
me.update paid_until: '18.12.2020 15:30'
me.update paid_until
meÑŽpaid_until
me.paid_until
me
me.update paid_until: '16.12.2020'
alex.update paid_until: '16.12.2020'
a.update paid_until: '16.12.2020'
a
a.update paid_until: '17.12.2020'
a.update paid_until: '17.1.2020'
a.paid_until - Time.now
me.update paid_until: nil
me
nil - Time.now
me.update paid_until: '15.12.2020'
a.update paid_until: '15.12.2019'
a.update paid_until: '17.12.2020'
  (paid_until.to_i - DateTime.now.to_i)/1.second
  (a.paid_until.to_i - DateTime.now.to_i)/1.second
22167/3600
me.update paid_until: '15.12.2020'
me.update paid_until: '15.12.2019'
a.update paid_until: '15.12.2019'
me.update paid_until: '15.12.2020'
me.update paid_until: nil
nil > 0
a.update paid_until: '17.12.2019'
a.update paid_until: '17.12.2020'
a.paid_until.in_time_zone('UTC')
a.paid_until.in_time_zone('UTC')
A
a
me
a.city
a.city.time_zone
me.update paid_until: '17.12.2020'
me.update paid_until: nil
a.update paid_until: '18.12.2020.in_time_zone('Kyiv')'
a.update paid_until: "18.12.2020.in_time_zone('Kyiv')"
a.paid_until
a.paid_until.in_time_zone('Kyiv')
Time.parce(a.paid_until)
Time.parse(a.paid_until)
Time.parse(a.paid_until.to_time)
a.paid_until.to_time
a.paid_until.to_time.in_time_zone('Kyiv')
a.update paid_until: "17.12.2020"
a.update paid_until: "17.1.2021"
me
exit
me
me = Doctor.find_by(email: 'consilium1@yandex.ru')
me
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
ale
alex
alex.update paid_until: '19.12.2020'
alex.update paid_until: '19.1.2021'
exit
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
alex.update paid_until: nil
alex.update paid_until: '19.01.2021'
exit
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
alex.update paid_until: nil
alex.update paid_until: '19.01.2021'
exit
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
alex.update paid_until: '16.01.2020'
my_date_time = Time.now + 4.days
distance_of_time_in_words(from_time, from_time - 45.seconds, include_seconds: true)
from_time = Time.now-10.minutes
distance_of_time_in_words(from_time, from_time - 45.seconds, include_seconds: true)
 paid_until = DateTime.current-1.days
  (paid_until - DateTime.current)/1.second
t =  (paid_until - DateTime.current)/1.second
t.class
t > 0
t =  (paid_until - DateTime.current)
t
t =  (paid_until.to_i - DateTime.current.to_i)
t
t.class
t =  (paid_until.to_i - DateTime.current.to_i)/1.second
t
t.class
paid_until.class
paid_until.to_seconds
paid_until.to_seconds
paid_until.to_sec
alex
alex.update paid_until: 17.12.2020 23:00
alex.update paid_until: '17.12.2020 23:00'
alex
alex.update paid_until: '17.12.2020 23:00, +2'
alex
alex.paid_until.in_time_zone(alex.city.time_zone)
alex.update paid_until: '17.12.2020 22:30'
alex.update paid_until: '18.12.2020 00:30'
alex.update paid_until: '19.12.2020 00:30'
(paid_until.to_i
     - DateTime.current.to_i)/1.second
paid_until.to_i
paid_until
alex.paid_until
me
Doctor.last
me = Doctor.find_by(email: 'consilium1@yandex.ru')
me
Doctor.first
Doctor.all.each( |d| p d.paid_until)
Doctor.all.each{ |d| p d.paid_until}
paid_until
alex.save
paid_until
exit
paid_until
paid_until
reload!
alex
Doctor.find_by(email: 'nick4vk@yandex.ru')
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
alex.update paid_until: '16.12.2020 00:30'
alex.update paid_until: '20.12.2020 00:30'
alex.update paid_until: '17.12.2020 00:30'
alex.update paid_until: '21.12.2020 00:30'
alex.update paid_until: '16.12.2020 00:30'
alex
exit
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
alex.update paid_until: '22.12.2020 00:30'
alex.update paid_until: '17.12.2020 00:30'
alex.update paid_until: '22.12.2020 00:30'
alex.update paid_until: '17.12.2020 00:30'
alex.update paid_until: '22.01.2021 00:30'
alex.update paid_until: '22.01.2021 00:30'exit
exit
arr = (0..500).to_a
arr
