params[:name] = 'кобоз'
a = params[:name]
a
exit
Doctor.last
Doctor.find_by(email: "consilium1@yandex.ru")
exit
Doctor.last
Doctor.last.paid_until
alex = Doctor.where(email: "nick4vk@yandex.ru")
alex
alex.update paid_until: '16.01.2021'
alex
alex.paid_until - DateTime.now
alex.paid_until
alex.email
alex.moderator
Doctor.last.paid_until
Doctor.last
Doctor.first
Doctor.where(email: "nick4vk@yandex.ru").paid_until
reload!
Doctor.where(email: "nick4vk@yandex.ru").paid_until
Doctor.where(email: "nick4vk@yandex.ru")
alex = Doctor.where(email: "nick4vk@yandex.ru")
alex.paid_until
alex.email
Patient.last
Patient.last.name
exit
Patient.last.birthdate
alex = Doctor.where(email: "nick4vk@yandex.ru")
alex.name
alex.paid_until
alex = Doctor.find_by(email: "nick4vk@yandex.ru")
alex.name
alex.paid_until
alex.paid_until - DateTime.now
(alex.paid_until - DateTime.now).to_days
(alex.paid_until - DateTime.now).to_day
(alex.paid_until - DateTime.now)/3600
(alex.paid_until - DateTime.now)/3600/34
(alex.paid_until - DateTime.now)
alex.paid_until.days - DateTime.now.days
alex.paid_until.day - DateTime.now.day
alex.paid_until
time_ago_in_words(alex.paid_until.day - DateTime.now.day)
time_ago_in_words(DateTime.now)
distance_of_time_in_words(alex.paid_until.day - DateTime.now.day)
Datetime.now+10.days
DateTime.now+10.days
a = DateTime.now+10.days
distance_of_time_in_words(alex.paid_until - DateTime.now)
distance_of_time_in_words(a  - DateTime.now)
a
a- DateTime.now
(a- DateTime.now)/1.day
(a.to_i - DateTime.now.to_i)/1.day
time_ago_in_words(DateTime.tomorrow)
time_ago_in_words(DateTime.now+10.days)
time_ago_in_words(DateTime.now)
time_ago_in_words(3.minutes.ago)
time_ago_in_words(3.minutes.from_now)
time_ago_in_words(ActionView::Helpers::DateHelper)
time_ago_in_words.ActionView::Helpers::DateHelper
ActionView::Helpers::DateHelper.time_ago_in_words
(a.to_i - DateTime.now.to_i)/1.day
a
(alex.paid_until.to_i - DateTime.now.to_i)/1.day
alex.paid_until
alex
Time.current
 return 0 unless paid_until <= Time.current
paid_until = DateTime.now+1.day
paid_until
(paid_until.to_i - DateTime.now.to_i)/1.day
paid_until = DateTime.now+2.day
(paid_until.to_i - DateTime.now.to_i)/1.day
(paid_until.to_i - DateTime.now.to_i)/1.hour
(paid_until.to_i - DateTime.now.to_i)/1.min
(paid_until.to_i - DateTime.now.to_i)/1.minute
paid_until = DateTime.now+1.day[A
(paid_until.to_i - DateTime.now.to_i)/1.minute
(paid_until - DateTime.now)
paid_until - DateTime.now
28783371887/2880000000
paid_until.in_sec - DateTime.now.in_sec
 DateTime.now.sec
 DateTime.now.seconds
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second
 DateTime.now.second

DateTime.now
paid_until
(paid_until.to_i - DateTime.now.to_i)/1.second
paid_until =DateTime.now+40.sec
paid_until =DateTime.now+40.second
paid_until
(paid_until.to_i - DateTime.now.to_i)/1.second
Patient.last
Doctor.last
exit
Doctor.find_by(email: 'nick4vk@yandex.ru')
a = Doctor.find_by(email: 'nick4vk@yandex.ru')
a
a.update paid_until: 'DateTime.now+1.month'
a.paid_until
a
a.update paid_until: 'DateTime.now+30.days'
a
DateTime.now+30.days
a.update (paid_until: ('DateTime.now+1.month)')
a
a
a.update (paid_until: ('DateTime.now+1.month'))
a
a.update paid_until: ('DateTime.now+1.month')
a
a.update name: 'Sun'
a
a.update paid_until: '16.01.2021'
a
reload!
(paid_until.to_i - DateTime.now.to_i)/1.second
(a.paid_until.to_i - DateTime.now.to_i)/1.second
me = Doctor.find_by(email: 'consilium1@yandex.ru')
me
me.has_paid
me.update paid_until: 16.01.2021
me.update paid_until: '16.01.2021'
a.update moderator: true
a
a.update moderator: false
me.update paid_until: '1.01.2021'
me.update paid_until: '18.12.2020'
me.update paid_until: '17.12.2020'
me.update paid_until: '18.12.2020 15:30'
me.update paid_until
meюpaid_until
me.paid_until
me
me.update paid_until: '16.12.2020'
alex.update paid_until: '16.12.2020'
a.update paid_until: '16.12.2020'
a
a.update paid_until: '17.12.2020'
a.update paid_until: '17.1.2020'
a.paid_until - Time.now
me.update paid_until: nil
me
nil - Time.now
me.update paid_until: '15.12.2020'
a.update paid_until: '15.12.2019'
a.update paid_until: '17.12.2020'
  (paid_until.to_i - DateTime.now.to_i)/1.second
  (a.paid_until.to_i - DateTime.now.to_i)/1.second
22167/3600
me.update paid_until: '15.12.2020'
me.update paid_until: '15.12.2019'
a.update paid_until: '15.12.2019'
me.update paid_until: '15.12.2020'
me.update paid_until: nil
nil > 0
a.update paid_until: '17.12.2019'
a.update paid_until: '17.12.2020'
a.paid_until.in_time_zone('UTC')
a.paid_until.in_time_zone('UTC')
A
a
me
a.city
a.city.time_zone
me.update paid_until: '17.12.2020'
me.update paid_until: nil
a.update paid_until: '18.12.2020.in_time_zone('Kyiv')'
a.update paid_until: "18.12.2020.in_time_zone('Kyiv')"
a.paid_until
a.paid_until.in_time_zone('Kyiv')
Time.parce(a.paid_until)
Time.parse(a.paid_until)
Time.parse(a.paid_until.to_time)
a.paid_until.to_time
a.paid_until.to_time.in_time_zone('Kyiv')
a.update paid_until: "17.12.2020"
a.update paid_until: "17.1.2021"
me
exit
me
me = Doctor.find_by(email: 'consilium1@yandex.ru')
me
alex = Doctor.find_by(email: 'nick4vk@yandex.ru')
ale
alex
alex.update paid_until: '19.12.2020'
alex.update paid_until: '19.1.2021'
exit
