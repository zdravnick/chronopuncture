a = Point.find_by name: 'Vb.44'
a
a.update alias_ru: 'Цзу-цяо-инь', point_energy:  'Metal'
a = Point.find_by name: 'Vb.43'
a.update alias_ru: 'Ся-си', point_energy:  'Water'
a = Point.find_by name: 'Vb.41'
a.update alias_ru: 'Цзу-линь-ци', point_energy:  'Wood'
a = Point.find_by name: 'Vb.38'
a.update alias_ru: 'Ян-фу', point_energy:  'Fire'
a = Point.find_by name: 'Vb.34'
a.update alias_ru: 'Ян-лин-цюань', point_energy:  'Earth'
a = Point.find_by name: 'E.42'
a
a.update point_energy: nil
a
a = Point.find_by name: 'Ig.4'
a
a = Point.find_by name: 'V.64'
a
a.update point_energy: nil
a
a = Point.all.where(point_energy: 'Wood')
a
a.each{ |a| p a.alias_ru, a.point_energy, '_ _ _ _'}
a.each{ |a| puts a.name, a.alias_ru, a.point_energy, '_____'}
exit
Point.find(10)
Point.find_by(name: 'C.41')
exit
exit
 Element.create name: 'Wood' yin_yang: 'Yang'
 Element.create name:( 'Wood' yin_yang: 'Yang')
Element.last
reload!
 Element.create name:( 'Wood' yin_yang: 'Yang')
 Element.create name:( 'Wood', yin_yang: 'Yang')
 Element.create(name: 'Wood' yin_yang: 'Yang')
2-2
 Element.create(name: 'Wood', yin_yang: 'Yang')
Element.last
'Metal' == 'Metal'
exit
Point.last
Meridian.last
Trunk.last
exit
Element.last
exit
Layer.all.each{ |l| l.name, l.id, '____'}
Layer.all.each{ |l| p  l.name, l.id, '____'}
exit
Layer.all.each{ |l| l.name, l.id, '____"}
2
Layer.all.each{ |l| p l.name, l.id, '____"}
Layer.all.each{ |l| p l.name, l.id, '____'}
Meridian.all.each{ |l| p l.alias_ru, l.id, '____'}
Lyaer.find(3)
Layer.find(3)
element.find(30
Element.find(3)
Element.find(3).layer
Element.find(4)
Element.find(4). season_meridian
Element.find(3)
Element.find(3).season_meridian
Element.find(4).season_meridian
Element.find(4)
Layer.all.each{ |l| p l.name, l.id, l.element}
Lyaer.last
Layer.last
Element.all.each{ |l| p l.name, l.id, l.element}
Element.last
Element.all.each{ |l| p l.name, l.id}
Layer.all.each{ |l| p l.name, l.id}
Layer.find(4)
Layer.find(4).element
Layer.find(4)
Layer.all.each{ |l| if l.layer_id: 4 p l.name, l.id}
2
Layer.last
Element.all.each{ |l| if l.layer_id: 4 p l.name, l.id}
2-2
2
Element.all.each{ |l| if l.layer_id: 4 p l.name, l.id end}
Element.all.each{ |l| if l.layer_id: '4' p l.name, l.id end}
2
Element.all.each{ |l| if l.layer_id: '4' p l.name, l.id }
2
32
Element.last.layer_id
Element.all.each{ |l| where l.layer_id: '4' p l.name, l.id }
Element.all.each{ |l| p l.name, l.id, l.layer_id }
Element.all.each{ |l| p l.name,  l.layer_id }
exit
Element.last
Element.last.destroy
Element.all.each{ |l| p l.name,  l.layer_id }
exit
Element.all.each{ |l| p l.name,  l.layer_id }
Element.find(5)
Element.find(6)
Element.find(4)
Element.find(3)
Element.find(3)
Element.find(4)
exit
Element.find(4)
Layer.find_by(name: 'Shao Yin')
a = Layer.find_by(name: 'Shao Yin')
a
a.own.element
a.own_element
a.own_element
exit
a = Layer.find_by(name: 'Shao Yin')
a.own_element
a = Layer.find_by(name: 'Shao Yang')
a
a.own_element
exit
a = Layer.find_by(name: 'Shao Yang')
a
a.own_element
a = Layer.find_by(name: 'Shao Yin')
a
a.own_element
a.update own_element_id: 4
a
a.own_element
a.own_element
a = Layer.find_by(name: 'Shao Yang')
a.own_element
exit
a = Layer.find_by(name: 'Shao Yang')
a
a.own_element
a = Layer.find_by(name: 'Shao Yin')
a
a.own_element
exit
Element.all.each{ |e| p '___', e.name, e.id }
Element.find(3)
Element.find(4)
Element.find(1)
Element.find(2)
Element.find(30
Element.find(3)
Element.find(4)
Element.find(4).wu_xing_meridian_id
Element.find(4).wu_xing_meridian
Element.дфые
Element.last
Element.last.layer
Element.last.layers
exit
Element.last
Element.create( name: 'Fire', yin_yang: 'Yang', wu_xing_meridian_id: 1, earthly: true)
Element.create( name: 'Fire', yin_yang: 'Yang', wu_xing_meridian_id: 1, earthly: true).errors
Point.last.point_energy
Point.last
exit
Point.last
Point.first
Point.find_all.where(own_element: "Metal")
Point.find_each.where(own_element: "Metal")
Point.find_each(own_element: "Metal")
Point.find_by(own_element: "Metal")
Point.where(own_element: "Metal")
Point.find_each{|e| p if e.own_element: "Metal")
Point.find_each{|e| p if e.own_element: "Metal" end)
Point.find_each{|e| p if e.own_element: "Metal" end}
Point.find_each{|e| p if e.own_element: "Metal"}
Point.find_each{|e| p  e.own_element: "Metal"}
Point.find_each{|e| p  e.own_element == "Metal"}
Point.find_each{|e| p  e.own_element if e.own_element  == "Metal"}
Point.find_each{|e| p '_ _ _',  e.alias_ru, e.own_element if e.own_element  == "Metal"}
Point.find_each{|e| p '_ _ _',  e.alias_ru, e.own_element if e.own_element  == "Metal" end}
Point.find_each{|e| p '_ _ _',  e.alias_ru, e.own_element if e.own_element  == "Metal" }
Branch.last
exit
Branch.last
exit
Element.last
Element.last.layer
Element.last.layers
exit
Element.last.layer
Element.last.layers
Layer.last
Layer.last.own_element
Layer.last.own_element.season_meridian
Layer.last.own_element.season_meridian.find_each{ |e| p e = Point.each{ |m| if m.own_element == 'Metal'}}
2-2
Layer.last.own_element.season_meridian.map{ |e| p e = Point.each{ |m| if m.own_element == 'Metal'}}
Layer.last.own_element.season_meridian.map{ |e| p e = Point.all.each{ |m| if m.own_element == 'Metal'}}
2-2
Point.all.each{ |m| if m.own_element == 'Metal'}
Point.last
Point.last.own_element
exit
