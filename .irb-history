      when 10 then 10
      end
      end
    end
  end.compact.sum
end
change_balance_energy(points, elem)
id = 1
def energy_balance(points)
  points.map do |point|
    case point.id
    when 1
      case id # это айди элемента
      when 1
        -10
      when 2
        10
      end
    when 2
    end
  end.sum
end
energy_balance(points)
id = 1
def energy_balance(points)
  points.map do |point|
    case point.id
    when 1
      case id # это айди элемента
      when 1
        -10
      when 2
        10
      end
    when 2
    end
  end.sum
end
energy_balance(points)id = 1
def energy_balance(points, id)
  points.map do |point|
    case point.id
    when 1
      case id # это айди элемента
      when 1
        -10
      when 2
        10
      end
    when 2
    end
  end.sum
end
energy_balance(points, id)
def energy_balance(points)
  points.map do |point|
    case point.id
    when 1
      case id # это айди элемента
      when 1
        -10
      when 2
        10
      end
    when 2
    end
  end.sum
end
energy_balance(points)
exit
points = Point.all
def energy_balance(points)
  points.map do |point|
    case point.id
    when 1
      case id # это айди элемента
      when 1
        -10
      when 2
        10
      end
    when 2
    end
  end.sum
end
energy_balance(points)
energy_balance(points)
exit
Point.last
a = Point.last
a.update serial_number: 9
a.save
a
a
exit
Meridian.last.big_nourish_point
exit
Element.first
Element.first.energy_balance(Point.find(1))
Element.first.energy_balance(Point.all)
exit
Element.first.energy_balance(Point.all)
exit
Element.first.energy_balance
Element.first.energy_balance(Point.all)
Element.first.energy_balance(Point.find(1))
Element.first.energy_balance(Point.find(1))
Element.first.energy_balance(Point.all)
Удуьутеюашкые
Element.first
Element.first.energy_balance(Point.all)
Element.first.energy_balance(Point.all)
exit
учше
exit
Point.last
exit
Meridian.last
Meridian.last.points
Meridian.last.points.each{ |a| p 'Точка: ', a.serial_number, a.alias_ru}
Point.last
Meridian.last.element
Meridian.last
Element.last
water_yin = Element.last
water_yin
water_yin.season_meridian_first
water_yin.season_meridian_second
water_yin.big_nutrition_point
exit
Element.first.energy_balance(Point.all)
Element.first.energy_balance(Point.all)
strong nutrition point iexit
exit
Element.first
exit
Point.find_by( name: 'V.67')
exit
Branch.all.size
Branch.first
Branch.first.day_meridian
Branch.find(2).day_meridian
Branch.find(3).day_meridian
Branch.find_by(name: 'Перикард')
Branch.day_meridian.find_by(name: 'Перикард')
Branch.all.map{ |a| a.day_meridian.find_by(name: 'Перикард')}
Branch.all.map{ |a| a.alias_ru, a.id,  a.day_meridian}
Branch.map{ |a| a.alias_ru, a.id,  a.day_meridian}
Branch.all.map{ |a|p  a.alias_ru, a.id,  a.day_meridian}
Branch.find(1)
Branch.find(1).day_meridian
Branch.find(1)
exit
Point.find_by(name: 'C.41')
Point.find_by(name: 'F.8')
учше
exit
Date.new(1974, 9, 18)
Date.new(1974, 9, 18).yday
учше
exit
User.where("name like '%Куч%' ")
Patient.where("name like '%Куч%' ")
Patient.where("name like '%куч%' ")
Patient.where("name ilike '%куч%' ")
Patient.where("UPPER(name) like '%куч%' ")
Patient.where("UPPER(name) like '%Куч%' ")
Patient.where("UPPER(name) like '%куч%' ")
Patient.where("UPPER(name) like '%КУЧ%' ")
Patient.where("UPPER(name) like '%КУЧ%' ")
Patient.where("UPPER(name) like '%куч%' ")
man sqlite
exit
Patient.last
Patient.create
City.create name: 'aaa'
exit
Branch.last
City.last
Patient.last
doctor.last
Doctor.last
Element.last
Layer.last
Meridian.last
Patient.last
Point.last
Trunc.last
Trunk.last
Trunk.last
Patient.last.visits
Patient.last
Patient.where("UPPER(name) like '%КУЧ%' ")
Patient.where("UPPER(name) like '%куч%' ")
Patient.where("UPPER(name) like '%куЧ%' ")
Patient.where("name like '%куЧ%' ")
Patient.where("name like '%бОб%' ")
Patient.where("name like '%,j,%' ")
Patient.where("name like '%б%' ")
exit
