    mon = date.mon
    year = date.year
  end
  n = ((((mon + 1)) * 30.6).truncate  + (year * 365.25).truncate + date.day - 114)%12
  if n < 3
    number_of_day_60th = n + 10
    else
    number_of_day_60th = n - 2
  end
end
p number_of_day_60th = number_of_day_calculation(@doctor_city, year_num_patient,
 @patient_birthdate)
def patient_birthdate_day_number(number_of_day_60th)
  (number_of_day_60th - 14)%60
    if number_of_day_60th == 0
      number_of_day_60th = 60
    else
    number_of_day_60th
  end
end
p patient_birthdate_day_number(number_of_day)
def number_of_day_calculation(city, year_num, date) # номер дня!
  y = year_num%12
  if y < 3
    mon = date.mon + 12
    year = date.year - 1
    else
    mon = date.mon
    year = date.year
  end
  n = ((((mon + 1)) * 30.6).truncate  + (year * 365.25).truncate + date.day - 114)%12
end
p number_of_day_60th = number_of_day_calculation(@doctor_city, year_num_patient,
 @patient_birthdate)
def number_of_day_calculation(city, year_num, date) # номер дня!
  y = year_num%12
  if y < 3
    mon = date.mon + 12
    year = date.year - 1
    else
    mon = date.mon
    year = date.year
  end
  n = (((mon + 1)) * 30.6).truncate  + (year * 365.25).truncate + date.day - 114)
end
p number_of_day_60th = number_of_day_calculation(@doctor_city, year_num_patient,
 @patient_birthdate)
def number_of_day_calculation(city, year_num, date) # номер дня!
  y = year_num%12
  if y < 3
    mon = date.mon + 12
    year = date.year - 1
    else
    mon = date.mon
    year = date.year
  end
  n = (((mon + 1)) * 30.6).truncate  + (year * 365.25).truncate + date.day - 114)
end
p number_of_day_60th = number_of_day_calculation(@doctor_city, year_num_patient,
 @patient_birthdate)
def number_of_day_calculation(city, year_num, date) # номер дня!
  y = year_num%12
  if y < 3
    mon = date.mon + 12
    year = date.year - 1
    else
    mon = date.mon
    year = date.year
  end
  n = (((mon + 1)) * 30.6).truncate  + (year * 365.25).truncate + date.day - 114)
end
def number_of_day_calculation(city, year_num, date) # номер дня!
  y = year_num%12
  if y < 3
    mon = date.mon + 12
    year = date.year - 1
    else
    mon = date.mon
    year = date.year
  end
  n = (((mon + 1)) * 30.6).truncate  + (year * 365.25).truncate + date.day - 114
end
p number_of_day_60th = number_of_day_calculation(@doctor_city, year_num_patient,
 @patient_birthdate)
def patient_birthdate_day_number(number_of_day_60th)
  (number_of_day_60th - 14)%60
    if number_of_day_60th == 0
      number_of_day_60th = 60
    else
    number_of_day_60th
  end
end
p patient_birthdate_day_number(number_of_day)
DateTime.current.zone
DateTime.current
exit
DateTime.now
DateTime.zone.now
Time.zone.now
DateTime.current
DateTime.current.zone
DateTime.current.zone.now
DateTime.current.zone
DateTime.current.offset
DateTime.now.offset
DateTime.current.with_zone("Moscow")
Time.zone.now
Time.zone.now.to_s
Time.zone.now.to_s :db
Time.now.to_s :db
DateTime.current.in_time_zone("Moscow")
DateTime.current
DateTime.current
DateTime.current.getutc
Time.now
Time.now.getutc
Doctor.last.city
Doctor.last.city.update(name: "Москва")
Doctor.last.city
Doctor.last.city.update(name: "Магнитогорск")
Doctor.last.city
DateTime.now - DateTime.current
(DateTime.now - DateTime.current).hour
DateTime.now.huor - DateTime.current.hour
DateTime.now.hour - DateTime.current.hour
DateTime.now.min - DateTime.current.min
a = DateTime.now.hour - DateTime.current.hour
a
a = DateTime.now.hour - a
a = DateTime.now.hour
 DateTime.now.hour - a
 DateTime.now.hour - a.hpur
 DateTime.now.hour - a.hour
a

date = DateTime.now
date
current_date = DateTime.current
offset = date.hour - DateTime.hour
offset = date.hour - current_date.hour
offset
DateTime.new = date - offset.hour
DateTime.new(date - offset.hour)
DateTime.new(DateTime.now - offset.hour)
DateTime.now - offset.hour
a = DateTime.now - offset.hour
a
a.class
@local_time = DateTime.now - offset.hour
@local_time
@local_time.class
Time.now.in_time_zone('America/New_York').utc_offset
Time.now.in_time_zone('Moscow').utc_offset
Time.now.in_time_zone('Moscow').utc_offset.hour
Time.now.in_time_zone('Moscow').utc_offset/3600
Time.zone.now.strftime("%z")
Time.zone.now
DateTime.zone.now
DateTime.zone
exit
TIme.now
Time.now
Time.zone
DateTime.zone
exit
City.first
City.first.update(time_zone: "Ekaterinburg")
City.first.time_zone
City.find.id(1)
City.find.1
City.find(1)
City.find(2)
City.find(2).update(time_zone: "Moscow")
City.find(2).time_zone
City.find(3)
City.find(3).update(time_zone: "Novosibirsk")
City.find(4)
City.find(4).update(time_zone: "St. Petersburg")
City.find(5)
City.find(5).update(time_zone: "Moscow")
City.find(6)
City.find(6).update(time_zone: "Kyiv")
City.find(7)
City.find(7).update(time_zone: "Astana")
City.find(8)
City.find(8).update(time_zone: "Moskow")
City.find(9)
City.find(9).update(time_zone: "Moskow")
City.find(10)
City.find(10).update(time_zone: Kyiv"")
City.find(10).update(time_zone: "Kyiv")
City.find(11)
City.all.count
Time.zone
Time.zone.now
Time.in_time_zone
Tin_time_zone()
City.all.each{ |s| p s.time_zone}
учше
exit
