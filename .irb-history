    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return our_array = array_fibonacci
end
fibonacci_numbers
our_array
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return our_array = array_fibonacci
end
fibonacci_numbers
our_array
our_array = []
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return our_array = array_fibonacci
end
fibonacci_numbers
our_array
array_fibonacci
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return our_array = array_fibonacci
end
fibonacci_numbers
array_fibonacci
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return our_array = array_fibonacci
end
array_fibonacci
@array_fibonacci
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return array_fibonacci
end
fibonacci_numbers
@array_fibonacci
@array_fibonacci
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return @array_fibonacci
end
fibonacci_numbers
@array_fibonacci
exit
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return array_fibonacci
end
@array_fibonacci = fibonacci_numbers
sss
@array_fibonacci
exit
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
end
@array_fibonacci = fibonacci_numbers
@array_fibonacci
exit
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
end
fibonacci_numbers
fibonacci_numbers
fibonacci_numbersarray_fibonacci
array_fibonacci
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return array_fibonacci
end
fibonacci_numbers
array_fibonacci
exit
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return @numbers = array_fibonacci
end
fibonacci_numbers
@numbers
exit
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
end
@numbers = fibonacci_numbers
@numbers
exit
def fibonacci_numbers
  puts 'Укажите верхнюю границу(число)'
  num = gets.chomp.to_i
  array_fibonacci = [0, 1, 1]
  loop do |n|
    new_num = array_fibonacci.last + array_fibonacci[-2]
    break if new_num > num
    array_fibonacci << new_num
  end
  return array_fibonacci
end
@numbers = fibonacci_numbers
@numbers
@numbers.last
@numbers.seventh
@numbers.forth
@numbers.third
@numbers.fifth
@numbers.sixth
@numbers
@numbers.first
@numbers.second
@numbers.fifth
@numbers[6]
@numbers.last
@numbers[-2]
var changedIndicators = ["#wood_yin_range", "#wood_yang_range"];
